{"ast":null,"code":"var _jsxFileName = \"/Users/ogesvind/Desktop/mychatapp/chatapp/src/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = _ref => {\n  _s();\n  let {\n    messages,\n    currentMember\n  } = _ref;\n  const [renderedMessages, setRenderedMessages] = useState([]);\n  useEffect(() => {\n    setRenderedMessages(messages);\n  }, [messages]);\n  const renderMessage = message => {\n    const {\n      member,\n      text\n    } = message;\n    const messageFromMe = member && member.id === currentMember.id;\n    const className = messageFromMe ? \"Messages-message currentMember\" : \"Messages-message\";\n    const avatarStyle = member && member.clientData && member.clientData.color ? {\n      backgroundColor: member.clientData.color\n    } : {};\n    const username = member && member.clientData && member.clientData.username;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"avatar\",\n        style: avatarStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Messages-list\",\n    children: renderedMessages.map(m => renderMessage(m))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"+XXTkJ4FgL2OyY9T5jTDETmc8zY=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Messages","_ref","_s","messages","currentMember","renderedMessages","setRenderedMessages","renderMessage","message","member","text","messageFromMe","id","className","avatarStyle","clientData","color","backgroundColor","username","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","m","_c","$RefreshReg$"],"sources":["/Users/ogesvind/Desktop/mychatapp/chatapp/src/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Messages = ({ messages, currentMember }) => {\n  const [renderedMessages, setRenderedMessages] = useState([]);\n\n  useEffect(() => {\n    setRenderedMessages(messages);\n  }, [messages]);\n\n  const renderMessage = (message) => {\n    const { member, text } = message;\n    const messageFromMe = member && member.id === currentMember.id;\n    const className = messageFromMe\n      ? \"Messages-message currentMember\"\n      : \"Messages-message\";\n\n    const avatarStyle = member && member.clientData && member.clientData.color\n      ? { backgroundColor: member.clientData.color }\n      : {};\n\n    const username = member && member.clientData && member.clientData.username;\n\n    return (\n      <li key={message.id} className={className}>\n        <span className=\"avatar\" style={avatarStyle} />\n        <div className=\"Message-content\">\n          <div className=\"username\">{username}</div>\n          <div className=\"text\">{text}</div>\n        </div>\n      </li>\n    );\n  };\n\n  return (\n    <ul className=\"Messages-list\">\n      {renderedMessages.map((m) => renderMessage(m))}\n    </ul>\n  );\n};\n\nexport default Messages;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdS,mBAAmB,CAACH,QAAQ,CAAC;EAC/B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,OAAO;IAChC,MAAMG,aAAa,GAAGF,MAAM,IAAIA,MAAM,CAACG,EAAE,KAAKR,aAAa,CAACQ,EAAE;IAC9D,MAAMC,SAAS,GAAGF,aAAa,GAC3B,gCAAgC,GAChC,kBAAkB;IAEtB,MAAMG,WAAW,GAAGL,MAAM,IAAIA,MAAM,CAACM,UAAU,IAAIN,MAAM,CAACM,UAAU,CAACC,KAAK,GACtE;MAAEC,eAAe,EAAER,MAAM,CAACM,UAAU,CAACC;IAAM,CAAC,GAC5C,CAAC,CAAC;IAEN,MAAME,QAAQ,GAAGT,MAAM,IAAIA,MAAM,CAACM,UAAU,IAAIN,MAAM,CAACM,UAAU,CAACG,QAAQ;IAE1E,oBACEnB,OAAA;MAAqBc,SAAS,EAAEA,SAAU;MAAAM,QAAA,gBACxCpB,OAAA;QAAMc,SAAS,EAAC,QAAQ;QAACO,KAAK,EAAEN;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CzB,OAAA;QAAKc,SAAS,EAAC,iBAAiB;QAAAM,QAAA,gBAC9BpB,OAAA;UAAKc,SAAS,EAAC,UAAU;UAAAM,QAAA,EAAED;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1CzB,OAAA;UAAKc,SAAS,EAAC,MAAM;UAAAM,QAAA,EAAET;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GALChB,OAAO,CAACI,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CAAC;EAET,CAAC;EAED,oBACEzB,OAAA;IAAIc,SAAS,EAAC,eAAe;IAAAM,QAAA,EAC1Bd,gBAAgB,CAACoB,GAAG,CAAEC,CAAC,IAAKnB,aAAa,CAACmB,CAAC,CAAC;EAAC;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAET,CAAC;AAACtB,EAAA,CApCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}